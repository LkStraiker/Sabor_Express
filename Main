import os
import json
from uuid import uuid4

ARQUIVO_DADOS = 'restaurantes.json'


def carregar_dados():
    try:
        with open(ARQUIVO_DADOS, 'r') as f:
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        return []


def salvar_dados(dados):
    with open(ARQUIVO_DADOS, 'w') as f:
        json.dump(dados, f, indent=2)


restaurantes = carregar_dados()


def exibir_nome_do_programa():
    print("""
█▀ █▀▀ █▀█ █▀▀ █▀▀ █▀▀ ▀█▀   █▀█ █▀▀ █▀ ▀█▀ █▀█ █▀█
▄█ ██▄ █▀▄ █▄▄ ██▄ █▄▄ ░█░   █▀▄ ██▄ ▄█ ░█░ █▄█ █▀▄
---------------------------------------------------
""")


def exibir_opcoes():
    print('1. Cadastrar restaurante')
    print('2. Listar restaurantes')
    print('3. Alternar estado do restaurante')
    print('4. Sair\n')


def limpar_tela():
    os.system('cls' if os.name == 'nt' else 'clear')


def exibir_subtitulo(texto):
    limpar_tela()
    linha = '═' * (len(texto) + 4)
    print(f"{linha}\n  {texto.upper()}\n{linha}\n")


def voltar_ao_menu_principal():
    input('\nPressione Enter para voltar ao menu... ')
    main()


def cadastrar_novo_restaurante():
    exibir_subtitulo('Cadastro de novo restaurante')

    while True:
        nome = input('Nome do restaurante: ').strip()
        if not nome:
            print("⚠️ O nome não pode estar vazio!")
            continue

        if any(r['nome'].lower() == nome.lower() for r in restaurantes):
            print("⚠️ Já existe um restaurante com esse nome!")
            continue

        categoria = input('Categoria: ').strip()
        if not categoria:
            print("⚠️ A categoria não pode estar vazia!")
            continue

        novo_restaurante = {
            'id': str(uuid4()),
            'nome': nome,
            'categoria': categoria,
            'ativo': False
        }

        restaurantes.append(novo_restaurante)
        salvar_dados(restaurantes)
        print(f"\n✅ {nome} cadastrado com sucesso!")
        voltar_ao_menu_principal()
        break


def listar_restaurantes():
    exibir_subtitulo('Lista de restaurantes')

    if not restaurantes:
        print("Nenhum restaurante cadastrado.")
        voltar_ao_menu_principal()
        return

    print(f"{'ID':<36} | {'NOME':<20} | {'CATEGORIA':<15} | STATUS")
    print('-' * 85)
    for restaurante in restaurantes:
        status = '🟢 Ativo' if restaurante['ativo'] else '🔴 Inativo'
        print(f"{restaurante['id']} | {restaurante['nome'][:20]:<20} | {restaurante['categoria'][:15]:<15} | {status}")

    voltar_ao_menu_principal()


def alternar_estado_restaurante():
    exibir_subtitulo('Alterar status do restaurante')

    if not restaurantes:
        print("Nenhum restaurante cadastrado.")
        voltar_ao_menu_principal()
        return

    id_restaurante = input("Digite o ID do restaurante: ").strip()

    for restaurante in restaurantes:
        if restaurante['id'] == id_restaurante:
            restaurante['ativo'] = not restaurante['ativo']
            salvar_dados(restaurantes)
            status = 'ativado' if restaurante['ativo'] else 'desativado'
            print(f"\n✅ Status de {restaurante['nome']} alterado para {status}!")
            voltar_ao_menu_principal()
            return

    print(f"\n⚠️ Nenhum restaurante encontrado com o ID {id_restaurante}")
    voltar_ao_menu_principal()


def finalizar_app():
    exibir_subtitulo('Encerrando o sistema')
    print("Obrigado por utilizar nosso sistema!")
    exit()


def escolher_opcao():
    try:
        opcao = int(input('Escolha uma opção: '))
        return opcao
    except ValueError:
        return -1


def main():
    while True:
        limpar_tela()
        exibir_nome_do_programa()
        exibir_opcoes()

        opcao = escolher_opcao()

        if opcao == 1:
            cadastrar_novo_restaurante()
        elif opcao == 2:
            listar_restaurantes()
        elif opcao == 3:
            alternar_estado_restaurante()
        elif opcao == 4:
            finalizar_app()
        else:
            print("\n⚠️ Opção inválida! Tente novamente.")
            input('Pressione Enter para continuar... ')


if __name__ == '__main__':
    main()
